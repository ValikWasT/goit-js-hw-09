{"mappings":"AACcA,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBACrBD,SAASC,cAAc,wBACzBD,SAASC,cAAc","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  submitBtn: document.querySelector('form > button'),\n};\n// refs.submitBtn.addEventListener(\n//   'submit',\n//   createPromise(refs.inputAmount.value, refs.inputDelay.value)\n// );\n\nfunction createPromise(position, delay) {\n  stopDefAction();\n  for (let i = 0; i < position; i += 1) {\n    const shouldResolve = Math.random() > 0.3;\n    const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve('Success! Value passed to resolve function');\n        } else {\n          reject('Error! Error passed to reject function');\n        }\n      }, delay);\n    });\n    promise\n      .then(value => {\n        console.log(value);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    delay += 500;\n  }\n}\n"],"names":["document","querySelector"],"version":3,"file":"03-promises.3d599ed6.js.map"}