{"mappings":"YAAA,IAAMA,EAAO,CACXC,WAAYC,SAASC,cAAc,uBACnCC,UAAWF,SAASC,cAAc,sBAClCE,YAAaH,SAASC,cAAc,wBACpCG,KAAMJ,SAASC,cAAc,SAE/BH,EAAKM,KAAKC,iBAAiB,UAAU,SAAAC,GACnCA,EAAEC,iBAIJ,SAAuBC,EAAUC,GAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAUE,GAAK,EAAG,CACpC,IAAMC,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,6CAERC,EAAO,4CAERP,MAGFS,MAAK,SAAAC,GACJC,QAAQC,IAAIF,MAEbG,OAAM,SAAAC,GACLH,QAAQC,IAAIE,MAEhBd,GAAS,KAtBXe,CAAc1B,EAAKK,YAAYgB,MAAOrB,EAAKC,WAAWoB,U","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  inputDelay: document.querySelector('input[name=\"delay\"]'),\n  inputStep: document.querySelector('input[name=\"step\"]'),\n  inputAmount: document.querySelector('input[name=\"amount\"]'),\n  form: document.querySelector('form'),\n};\nrefs.form.addEventListener('submit', e => {\n  e.preventDefault();\n  createPromise(refs.inputAmount.value, refs.inputDelay.value);\n});\n\nfunction createPromise(position, delay) {\n  for (let i = 0; i < position; i += 1) {\n    const shouldResolve = Math.random() > 0.3;\n    const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve('Success! Value passed to resolve function');\n        } else {\n          reject('Error! Error passed to reject function');\n        }\n      }, delay);\n    });\n    promise\n      .then(value => {\n        console.log(value);\n      })\n      .catch(error => {\n        console.log(error);\n      });\n    delay += 500;\n  }\n}\n"],"names":["$ce04d3a99e08e73b$var$refs","inputDelay","document","querySelector","inputStep","inputAmount","form","addEventListener","e","preventDefault","position","delay","i","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","value","console","log","catch","error","$ce04d3a99e08e73b$var$createPromise"],"version":3,"file":"03-promises.8f4d96a0.js.map"}